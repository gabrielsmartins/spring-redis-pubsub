import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'br.gasmartins.pubsub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.2")
	set('jedisVersion', "3.8.0")
	set('logstashVersion', "7.1.1")
	set('modelMapperVersion', "3.1.0")
	set('awsSdkVersion', "1.12.459")
	set('testContainersVersion', "1.18.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: modelMapperVersion
	implementation group: 'redis.clients', name: 'jedis', version: jedisVersion
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'com.amazonaws:aws-java-sdk-dynamodb'
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: logstashVersion

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation platform("org.testcontainers:testcontainers-bom:${testContainersVersion}") //import bom
	testImplementation('org.testcontainers:testcontainers') //no version specified
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "com.amazonaws:aws-java-sdk-bom:${awsSdkVersion}"
	}
}

test {
	OperatingSystem os = DefaultNativePlatform.currentOperatingSystem;
	if (os.isLinux()) {
		def uid = ["id", "-u"].execute().text.trim()
		environment "DOCKER_HOST", "unix:///run/user/$uid/podman/podman.sock"
	} else if (os.isMacOsX()) {
		environment "DOCKER_HOST", "unix:///tmp/podman.sock"
	}
	environment "TESTCONTAINERS_RYUK_DISABLED", "true"
	useJUnitPlatform()
}
